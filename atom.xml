<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>裴鹏飞博客</title>
  
  <subtitle>记录生活的乐趣！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-02-07T03:06:35.288Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>裴鹏飞</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Sublime Text 3预览Markdown</title>
    <link href="http://yoursite.com/2018/02/07/Sublime-Text-3%E9%A2%84%E8%A7%88Markdown/"/>
    <id>http://yoursite.com/2018/02/07/Sublime-Text-3预览Markdown/</id>
    <published>2018-02-07T02:47:36.000Z</published>
    <updated>2018-02-07T03:06:35.288Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Sublime-Text-3预览Markdown"><a href="#Sublime-Text-3预览Markdown" class="headerlink" title="Sublime Text 3预览Markdown"></a>Sublime Text 3预览Markdown</h1><h2 id="安装控制器"><a href="#安装控制器" class="headerlink" title="安装控制器"></a>安装控制器</h2><ol><li><p>按下按下<strong>ctrl+`</strong>出现小控制台</p></li><li><p>输入<figure class="highlight plain"><figcaption><span>urllib.request,os; pf </span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">## 安装插件</div><div class="line"></div><div class="line">按下ctrl+shift+P打开快速菜单，键入’pcip’： </div><div class="line"></div><div class="line">回车，等待数据更新，完成后会主动显示软件列表。 </div><div class="line"></div><div class="line">在里面输入以下软件名称并回车进行安装： </div><div class="line"></div><div class="line">Markdown Editing // Markdown编辑和语法高亮支持 </div><div class="line"></div><div class="line">Markdown Preview// Markdown导出html预览支持 </div><div class="line"></div><div class="line">auto-save // 可自定义的自动保存功能 </div><div class="line"></div><div class="line">耐心等待操作完成，之后关闭并重新打开Sublime Text 3</div><div class="line"></div><div class="line">## 绑定快捷键</div><div class="line"></div><div class="line">```&#123; &quot;keys&quot;: [&quot;alt+m&quot;], &quot;command&quot;: &quot;markdown_preview_select&quot;, &quot;args&quot;: &#123;&quot;target&quot;: &quot;browser&quot;&#125; &#125;</div></pre></td></tr></table></figure></p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Sublime-Text-3预览Markdown&quot;&gt;&lt;a href=&quot;#Sublime-Text-3预览Markdown&quot; class=&quot;headerlink&quot; title=&quot;Sublime Text 3预览Markdown&quot;&gt;&lt;/a&gt;Sublime Text 3
      
    
    </summary>
    
    
      <category term="工具" scheme="http://yoursite.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>网络</title>
    <link href="http://yoursite.com/2018/01/27/%E7%BD%91%E7%BB%9C/"/>
    <id>http://yoursite.com/2018/01/27/网络/</id>
    <published>2018-01-27T05:43:48.000Z</published>
    <updated>2018-01-27T05:43:48.910Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>JavaScript Dom编程艺术</title>
    <link href="http://yoursite.com/2017/10/17/JavaScript-Dom%E7%BC%96%E7%A8%8B%E8%89%BA%E6%9C%AF/"/>
    <id>http://yoursite.com/2017/10/17/JavaScript-Dom编程艺术/</id>
    <published>2017-10-17T14:33:37.000Z</published>
    <updated>2017-10-17T15:45:54.893Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><blockquote><p>事实上，文档中的每一个语速都是一个对象，利用DOM提供的方法能得到任何一个对象。</p></blockquote><h2 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h2><p>对象是由一些属性和方法组合在一起而构成的一个数据实体</p><ul><li>属性是隶属于某个特定对象的变量；</li><li>方法是只有某个特定对象才能调用的函数；<br>属性和方法都使用“点”语法来访问：<br>Object.property<br>Object.method()</li></ul><p>javascript语言里的对象可以分为三种类型。</p><ul><li>用户定义对象（user-defined object）：由程序员自行创建的对象</li><li>内建对象（nativa object)：内建在javascript语言里的对象</li><li>宿主对象（hostobject）：由浏览器提供的对象</li></ul><p><img src="http://upload-images.jianshu.io/upload_images/4142756-abb3e34c89f590e1.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><h2 id="获取元素"><a href="#获取元素" class="headerlink" title="获取元素"></a>获取元素</h2><p><strong>1.getElementById</strong><br>这个方法将返回一个与那个有着给定id属性值的元素节点对应的对象</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">document</span>.getElementById(id)</div></pre></td></tr></table></figure><p>它是document对象特有的函数。在脚本代码里，函数名的后面必须跟有一对圆括号，这对圆括号包含着函数的参数。<code>getElementById</code>方法只有一个参数：你想获得的那个元素的id属性的值，这个id值必须放在单引号或双引号里。</p><p><code>typeof</code>操作符可以告诉我们它的操作数是一个字符串、树枝、函数、布尔值还是对象。</p><p><strong>2.getElementsByTagName</strong></p><p><strong>文档中的每一个元素都是一个对象</strong>，这个方法返回一个对象数组，每个对象分别对应着文档里有着给定标签的一个元素，只有一个参数，参数是标签的名字。 </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">element.getElementsByTagName(tag)</div></pre></td></tr></table></figure><p><strong>3.getElementsByClassName</strong></p><p>这个方法让我们能够通过class属性中的类名来访问元素。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">getElementsByClassName(<span class="class"><span class="keyword">class</span>)</span></div></pre></td></tr></table></figure><h2 id="获取和设置属性的值"><a href="#获取和设置属性的值" class="headerlink" title="获取和设置属性的值"></a>获取和设置属性的值</h2><p><strong>1.getAttribute</strong></p><p><code>getAttribute</code>是一个函数。它只有一个参数——你打算查询的属性的名字,不是document对象，只能通过<strong>元素节点</strong>对象调用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">objeect.getAttribute(attribute)</div></pre></td></tr></table></figure><p><strong>2.setAttribute</strong></p><p>不是document对象，只能通过元素节点对象调用,允许对属性节点的值做出修改</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">objeect.setAttribute(attribute,value)</div></pre></td></tr></table></figure><h2 id="事件处理函数"><a href="#事件处理函数" class="headerlink" title="事件处理函数"></a>事件处理函数</h2><p>onmouseover:鼠标指针悬停在某个元素上时触发一个动作<br>onmouseout:鼠标指针离开某个元素时触发一个动作<br>onclick:用户点击链接时触发一个动作</p><p><strong>3.childNodes属性</strong></p><p>在一棵节点树上，childNodes属性可以用来获取任何一个元素的所有子元素，它是一个包含这个元素所有子元素的数组</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">element.childNodes</div></pre></td></tr></table></figure><p><strong>4.nodeType属性</strong></p><p>由<code>childNodes</code>属性返回的数组包含所有类型的节点而不仅仅是元素节点，几乎每一样东西都是一个节点，包括空格和换行符。</p><p>每一个节点都有<code>nodeType</code>属性，这个属性可以让我们知道自己正在与哪一种节点打交道，用下面的语法获取接节点nodeType属性：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">node.nodeType</div></pre></td></tr></table></figure><p>nodeType的值是一个数字而不是像“element”或“attribute”那样的英文字符串。<br>nodeType属性共有12种可取值，但其中仅有3种具有实用价值。</p><ul><li>元素节点的值是1</li><li>属性节点的值是2</li><li>文本节点的值是3</li></ul><p><strong>5.nodeValue属性</strong></p><p>如果想改变一个文本节点的值，那就使用DOM提供的<code>nodeValue</code>属性，它用来得到（和设置）一个节点的值：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">node.nodeValue</div></pre></td></tr></table></figure><p><strong>6.firstChild和lastChild</strong></p><p>数组的第一个元素<code>firstChild</code>,等同于</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">node.childNOdes[<span class="number">0</span>]</div></pre></td></tr></table></figure><p>数组的最后一个元素<code>lastChild</code>,等同于</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">node.childNOdes[node.chiNodes.length<span class="number">-1</span>]</div></pre></td></tr></table></figure><h2 id="最佳实践"><a href="#最佳实践" class="headerlink" title="最佳实践"></a>最佳实践</h2><ol><li>平稳退化</li><li>javascript与HTML标记分离<br>如果想用javascript给某个网页添加一些行为，就不应该让javascript代码对这个网页有任何依赖。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;事实上，文档中的每一个语速都是一个对象，利用DOM提供的方法能得到任何一个对象。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;对象&quot;&gt;&lt;a href=&quot;#对象&quot; class=&quot;headerlink&quot; ti
      
    
    </summary>
    
      <category term="前端" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="javaScript" scheme="http://yoursite.com/tags/javaScript/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+Github,搭建博客</title>
    <link href="http://yoursite.com/2017/10/17/Hexo-Github-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2017/10/17/Hexo-Github-搭建博客/</id>
    <published>2017-10-17T12:20:31.000Z</published>
    <updated>2017-10-17T12:44:15.275Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Hexo 是高效的静态站点生成框架，她基于 Node.js。 通过 Hexo 你可以轻松地使用 Markdown 编写文章，除了 Markdown 本身的语法之外，还可以使用 Hexo 提供的 标签插件 来快速的插入特定形式的内容。</p></blockquote><a id="more"></a><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><h3 id="1-安装Git-Bash"><a href="#1-安装Git-Bash" class="headerlink" title="1.安装Git Bash"></a>1.安装Git Bash</h3><p>Git Bash可以让我们在windown操作系统下使用命令</p><ul><li><a href="https://git-for-windows.github.io/" target="_blank" rel="external">下载地址</a></li><li>安装步骤：一路next就行；</li><li>安装完成：打开Git Bash，输入<code>git  version</code>,出现版本信息就是安装成功了。</li><li><p>配置Git Bash<br><code>YourName</code>和<code>YourEail</code>都替换成你自己的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git config --global user.name &quot;Your Name&quot;</div><div class="line">$ git config --global user.email &quot;email@example.com&quot;</div></pre></td></tr></table></figure></li><li><p>由于你的本地Git仓库和GitHub仓库之间的传输是通过<code>SSH</code>加密的，所以，需要一点设置</p><ul><li>第1步：创建<code>SSH Key</code>。在用户主目录(C:\Users\登录名.ssh)下，看看有没有<code>.ssh</code>目录，如果有，再看看这个目录下有没有<code>id_rsa</code>和<code>id_rsa.pub</code>这两个文件，如果已经有了，可直接跳到下一步。如果没有，打开打开Git Bash，创建<code>SSH Key</code>：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ssh-keygen -t rsa -C &quot;youremail@example.com&quot;</div></pre></td></tr></table></figure></li></ul></li></ul><p>你需要把邮件地址换成你自己的邮件地址，然后一路回车，使用默认值即可，由于这个Key也不是用于军事目的，所以也无需设置密码。<br>如果一切顺利的话，可以在用户主目录里找到<code>.ssh</code>目录，里面有<code>id_rsa</code>和<code>id_rsa.pub</code>两个文件，这两个就是<code>SSH Key</code>的秘钥对，<code>id_rsa</code>是私钥，不能泄露出去，<code>id_rsa.pub</code>是公钥，可以放心地告诉任何人。</p><ul><li>第2步：登陆GitHub，打开<code>Account settings</code>，“SSH Keys”页面：<br>然后，点<code>Add SSH Key</code>，填上任意Title，在Key文本框里粘贴id_rsa.pub<br>文件的内容：<br><img src="http://ooswu775w.bkt.clouddn.com/17-10-17/12142955.jpg" alt=""><br>点“Add Key”，你就应该看到已经添加的Key：</li></ul><h3 id="2-安装NodeJS"><a href="#2-安装NodeJS" class="headerlink" title="2.安装NodeJS"></a>2.安装NodeJS</h3><p>Hexo是基于nodeJS环境的静态博客</p><ul><li><a href="https://nodejs.org/en/" target="_blank" rel="external">下载地址</a>(说明：LTS为长期支持版，Current为当前最新版)</li><li>安装步骤：下载好msi文件后，双击安装，一路next，不过在Custom Setup这一步记得选 Add to PATH ,这样你就不用自己去配置电脑上环境变量了，装完在按 win + r 快捷键调出运行，然后输入cmd确定，在cmd中输入path可以看到你的node是否配置在里面（环境变量）。</li><li>查看版本：<br>命令：<code>node -v</code></li></ul><h3 id="3-配置GitHub"><a href="#3-配置GitHub" class="headerlink" title="3.配置GitHub"></a>3.配置GitHub</h3><ul><li>首先注册、登录 <a href="https//github.com/">https://github.com</a><br>记住自己的<strong>Username</strong></li><li>然后右上角选择 Create a new repository <a href="https//github.com/new">https://github.com/new</a><br>Repository name 填自己的名字 <a href="http//yourname.github.io">http://yourname.github.io</a>(yourname与你的注册用户名一致,这个就是你博客的域名了)<br>例如，我的域名是<a href="http//github.com/zhihuya">http://github.com/onerme</a>，就填入<a href="http//onerme.github.io">http://onerme.github.io</a>。</li></ul><h2 id="正式开始"><a href="#正式开始" class="headerlink" title="正式开始"></a>正式开始</h2><h3 id="1-安装Hexo"><a href="#1-安装Hexo" class="headerlink" title="1.安装Hexo"></a>1.安装Hexo</h3><ul><li>在<code>git bash</code>中新建一个文件夹，用来存放blog文件</li><li>然后cd到该文件夹里。</li><li>安装命令：<code>npm install hexo-cli -g</code></li><li>比较慢，安装完成之后，查看版本<code>hexo -v</code>,输出版本信息成功安装。</li><li>初始化命令<code>hexo init</code>,完成之后会出现下面的文件<ul><li>node_modules：是依赖包</li><li>public：存放的是生成的页面</li><li>scaffolds：命令生成文章等的模板</li><li>source：用命令创建的各种文章</li><li>themes：主题</li><li>_config.yml：整个博客的配置</li><li>db.json：source解析所得到的</li><li>package.json：项目所需模块项目的配置信息</li></ul></li></ul><h3 id="2-配置Hexo"><a href="#2-配置Hexo" class="headerlink" title="2.配置Hexo"></a>2.配置Hexo</h3><p>在 Hexo 中有两份主要的配置文件，其名称都是 <code>_config.yml</code>。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。</p><p>为了描述方便，在以下说明中，将前者称为 <strong>站点配置文件</strong>， 后者称为 <strong>主题配置文件</strong>。</p><ol><li>用编辑器打开你的blog项目，修改_config.yml<br>文件的一些配置(冒号之后都是有一个半角空格的)：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">deploy: </div><div class="line">type: git </div><div class="line">repo: https://github.com/YourgithubName/YourgithubName.github.io.git branch: master</div></pre></td></tr></table></figure><ol><li>回到gitbash中，进入你的blog目录，分别执行以下命令：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">hexo clean</div><div class="line">hexo generate</div><div class="line">hexo server             //修改了Hexo文件就必须执行此命令</div></pre></td></tr></table></figure><p>注：hexo 3.0把服务器独立成个别模块，需要单独安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm i hexo-server</div></pre></td></tr></table></figure><p>打开浏览器输入：<a href="http://localhost:4000" target="_blank" rel="external">http://localhost:4000</a></p><ol><li>上传到github<br>先安装一波：<code>npm install hexo-deployer-git --save</code><br>（这样才能将你写好的文章部署到github服务器上并让别人浏览到）<br>执行命令(建议每次都按照如下步骤部署)：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">hexo clean</div><div class="line">hexo generate</div><div class="line">hexo deploy</div></pre></td></tr></table></figure><p>注意deploy的过程中要输入你的<code>username</code>及<code>passward</code>。</p><h3 id="3-开始写作"><a href="#3-开始写作" class="headerlink" title="3.开始写作"></a>3.开始写作</h3><p>创建一个新的帖子</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new &quot;文件名称&quot;       //必须在Hexo文件夹下打开gitbash输入</div></pre></td></tr></table></figure><p>运行服务器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure><p>生成静态文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure><p>部署到远程站点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure><p><strong>在浏览器中输入<a href="http://yourgithubname.github.io就可以查看你的博客了！" target="_blank" rel="external">http://yourgithubname.github.io就可以查看你的博客了！</a></strong></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Hexo 是高效的静态站点生成框架，她基于 Node.js。 通过 Hexo 你可以轻松地使用 Markdown 编写文章，除了 Markdown 本身的语法之外，还可以使用 Hexo 提供的 标签插件 来快速的插入特定形式的内容。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>学习指南</title>
    <link href="http://yoursite.com/2017/10/17/%E5%AD%A6%E4%B9%A0%E6%8C%87%E5%8D%97/"/>
    <id>http://yoursite.com/2017/10/17/学习指南/</id>
    <published>2017-10-16T16:21:20.000Z</published>
    <updated>2017-10-17T15:46:04.223Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h2 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h2><ul><li><p><a href="http://www.w3cplus.com/css3/understanding-flexbox-everything-you-need-to-know.html" target="_blank" rel="external">理解Flexbox：你需要知道的一切</a></p></li><li><p><a href="http://www.w3cplus.com/css3/normalizing-cross-browser-flexbox-bugs.html" target="_blank" rel="external">解决Flexbox跨浏览器兼容Bug</a></p></li><li><p><a href="http://www.w3cplus.com/css3/flexbox-adventures.html" target="_blank" rel="external">探索Flexbox</a></p></li><li><p><a href="http://www.w3cplus.com/css/learncssgrid.html" target="_blank" rel="external">CSS Grid布局</a></p></li><li><p><a href="https://css-tricks.com/centering-css-complete-guide/" target="_blank" rel="external">以CSS为中心：完整的指南</a></p></li><li><p><a href="http://www.zhangxinxu.com/wordpress/?p=1565" target="_blank" rel="external">CSS clip:rect矩形剪裁功能及一些应用介绍</a></p></li><li><p><a href="http://www.w3cplus.com/content/css3-font-face" target="_blank" rel="external">CSS3 @font-face</a></p></li><li><p><a href="http://www.w3cplus.com/css/advanced-html-css-lesson2-detailed-css-positioning.html" target="_blank" rel="external">CSS清除浮动与位置属性</a></p></li><li><p><a href="https://github.com/chadluo/CSS-Guidelines/blob/master/README.md" target="_blank" rel="external">通用 CSS 笔记、建议与指导</a></p></li><li><p><a href="http://howtocenterincss.com/" target="_blank" rel="external">生成居中代码作弊工具</a></p></li></ul><h2 id="版本控制"><a href="#版本控制" class="headerlink" title="版本控制"></a>版本控制</h2><ul><li><p><a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="external">Git教程—— 廖雪峰</a></p></li><li><p><a href="http://rogerdudler.github.io/git-guide/index.zh.html" target="_blank" rel="external">git - 简明指南</a></p></li><li><p><a href="https://git-scm.com/book/zh/v2" target="_blank" rel="external">git pro</a></p></li></ul><h2 id="编辑器"><a href="#编辑器" class="headerlink" title="编辑器"></a>编辑器</h2><ul><li><p><a href="https://wizardforcel.gitbooks.io/markdown-simple-world/content/index.html" target="_blank" rel="external">Markdown·简单的世界</a></p></li><li><p><a href="https://github.com/LearnShare/Learning-Markdown/tree/v2" target="_blank" rel="external">Markdown入门参考</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;CSS&quot;&gt;&lt;a href=&quot;#CSS&quot; class=&quot;headerlink&quot; title=&quot;CSS&quot;&gt;&lt;/a&gt;CSS&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.w3cplus.com/css3/un
      
    
    </summary>
    
    
  </entry>
  
</feed>
